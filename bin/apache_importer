#!/usr/bin/env ruby
require "pathname"
require "optparse"
require "rubygems"
require "logging"

options = {
  :log_file => "log/apache_importer.log",
  :log_level => :info,
  :daemonize => true
}

parser = OptionParser.new do |opts|
  opts.banner = "Usage: apache_importer [options] apache_log_file"
  opts.on("-o", "--log-file PATH", "Path to the log file, [log/script.%PID.log]") { |log_file| options[:log_file] = log_file }
  opts.on("-l", "--log-level LEVEL", [:debug, :info, :error], "Set log level [info]") { |level| log_level = level }
  opts.on("-n", "--no-daemonize", "Run in the foreground (no daemon)") { options[:daemonize] = false }
end

parser.parse!

load 'config.ru'
require "harbor/daemon"
require "harbor/mailer"
require "harbor/logging/appenders/email"
require "harbor/contrib/stats/reconciliation/apache_importer"
require "harbor/contrib/stats/reconciliation/request"
require "harbor/contrib/stats/reconciliation/request_queue"

worker = Harbor::Contrib::Stats::ApacheImporter.new(ARGV.shift)

logger = Logging::Logger[Harbor::Contrib::Stats::ApacheImporter]
logger.additive = false
logger.level = options[:log_level]
layout = Logging::Layouts::Pattern.new(:pattern => "%-5l %d: %m\n")

daemon = Harbor::Daemon.new(worker, options[:log_file], 0)

if options[:daemonize]
  daemon.detach

  @services = Harbor::Container.new
  @services.register(:mail_server, Harbor::MailServers::Sendmail.new)
  @services.register(:mailer, Harbor::Mailer)

  logger.add_appenders(Harbor::LogAppenders::Email.new(@services, "dev@wieck.com"))

  # Add Process.pid to log messages when daemonized.
  layout = Logging::Layouts::Pattern.new(:pattern => "#{"[%-5s]" % Process.pid} %-5l %d: %m\n")

  logger.add_appenders(Logging::Appenders::File.new(daemon.log_file, :layout => layout))
else
  logger.add_appenders(Logging::Appenders::Stdout.new(:layout => layout))
end

# =====================================================================================================================
# Run the daemon
# =====================================================================================================================
worker.logger = logger
daemon.logger = logger
daemon.run